<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <!--
        See http://www.liquibase.org/manual/home#available_database_refactorings
        for a list of supported elements and attributes
    -->
    <property name="now" value="now()"/>
    <changeSet id="bahmni-offline-global-property" author="tw" context="rel3">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM global_property where property = 'bahmniOfflineSync.eventlog.filterEvaluator'
            </sqlCheck>
        </preConditions>
        <comment>rel3</comment>
        <insert tableName="global_property">
            <column name="property" value="bahmniOfflineSync.eventlog.filterEvaluator"/>
            <column name="uuid" valueNumeric="name-of-uuid-function"/>
            <column name="description"
                    value="custom filter evaluator"/>
        </insert>
        <modifySql dbms="mysql">
            <replace replace="name-of-uuid-function" with="UUID()"/>
        </modifySql>
    </changeSet>
    <changeSet id="change-bahmni-offline-global-property" author="tw" context="rel3">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property where property = 'bahmniOfflineSync.eventlog.filterEvaluator'
            </sqlCheck>
        </preConditions>
        <comment>rel3</comment>
        <sql>
            UPDATE global_property SET property = 'bahmniOfflineSync.strategy' WHERE property = 'bahmniOfflineSync.eventlog.filterEvaluator';
        </sql>
    </changeSet>
    <changeSet id="change-bahmni-offline-global-property-value" author="tw" context="rel3">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) FROM global_property where property ='bahmniOfflineSync.strategy' and property_value = 'org.bahmni.module.bahmniOfflineSync.filter.LocationBasedFilterEvaluator'
            </sqlCheck>
        </preConditions>
        <comment>rel3</comment>
        <sql>
            UPDATE global_property SET property_value = 'org.bahmni.module.bahmniOfflineSync.strategy.LocationBasedOfflineSyncStrategy' WHERE property ='bahmniOfflineSync.strategy' and property_value = 'org.bahmni.module.bahmniOfflineSync.filter.LocationBasedFilterEvaluator'
        </sql>
    </changeSet>
    <changeSet id="generate-event-record-for-existing-lab-results" author="tw" context="rel3">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM event_records where category='LabOrderResults'
            </sqlCheck>
        </preConditions>
        <comment>rel3</comment>
        <sql>
            INSERT INTO event_records (uuid, title, timestamp, uri, object, category, date_created) (SELECT UUID(), 'Lab Order Results', now(), CONCAT('/openmrs/ws/rest/v1/bahmnicore/labOrderResults?patientUuid=', p.uuid), CONCAT('/openmrs/ws/rest/v1/bahmnicore/labOrderResults?patientUuid=', p.uuid), 'LabOrderResults', now() FROM person p, encounter e, encounter_type et WHERE p.person_id = e.patient_id AND e.encounter_type = et.encounter_type_id AND et.name = 'LAB_RESULT');
        </sql>
    </changeSet>

    <changeSet id="scheduler-job-for-creating-patient-data" author="tw" context="rel3">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM scheduler_task_config
                where schedulable_class='org.bahmni.module.bahmniOfflineSync.job.InitialSyncArtifactsPublisher'
            </sqlCheck>
        </preConditions>
        <comment>rel3</comment>
        <sqlFile path="AddInitialSyncArtifactsPublisherScheduler.sql"/>
    </changeSet>

</databaseChangeLog>
